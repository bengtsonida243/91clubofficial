{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johndel\\\\club91\\\\src\\\\ProfileAvatar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import Avatar, { genConfig } from 'react-nice-avatar';\nimport \"./ProfileAvatar.css\";\nimport Image1 from \"./image/asset1.webp\";\nimport Image2 from \"./image/asset2.webp\";\nimport Image3 from \"./image/asset3.webp\";\nimport Image4 from \"./image/asset4.webp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileAvatar = () => {\n  _s();\n  const images = [{\n    id: 1,\n    random: Image1\n  }, {\n    id: 2,\n    random: Image2\n  }, {\n    id: 3,\n    random: Image3\n  }, {\n    id: 3,\n    random: Image4\n  }];\n  const [randomImage, setRandomImage] = useState(\"\");\n  useEffect(() => {\n    const getRandomImage = () => {\n      const randomIndex = Math.floor(Math.random() * images.length);\n      return images[randomIndex].random;\n    };\n    setRandomImage(getRandomImage());\n  }, []);\n  // const config = genConfig({ sex: Math.random() > 0.5 ? 'man' : 'woman' });\n  const randomValue = Math.floor(Math.random() * 1000);\n  const generateRandomString = length => {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return result;\n  };\n  const randomString = generateRandomString(3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: randomImage,\n        alt: \"Random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col my-auto text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"member\",\n        children: [\" Mem***\", randomString, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col my-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"received\",\n        children: [\" Received \\u20B9\", randomValue, \".00  Winning Amount\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_s(ProfileAvatar, \"HhwFAEY6TCqypa3OB8+5LvKOOkM=\");\n_c = ProfileAvatar;\nexport default ProfileAvatar;\nvar _c;\n$RefreshReg$(_c, \"ProfileAvatar\");","map":{"version":3,"names":["React","useState","useEffect","Image1","Image2","Image3","Image4","jsxDEV","_jsxDEV","ProfileAvatar","_s","images","id","random","randomImage","setRandomImage","getRandomImage","randomIndex","Math","floor","length","randomValue","generateRandomString","characters","result","i","charAt","randomString","className","children","class","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Johndel/club91/src/ProfileAvatar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import Avatar, { genConfig } from 'react-nice-avatar';\r\nimport \"./ProfileAvatar.css\";\r\nimport Image1 from \"./image/asset1.webp\";\r\nimport Image2 from \"./image/asset2.webp\";\r\nimport Image3 from \"./image/asset3.webp\";\r\nimport Image4 from \"./image/asset4.webp\";\r\n\r\nconst ProfileAvatar = () => {\r\n\r\n    const images = [\r\n        { id: 1, random: Image1 },\r\n        { id: 2, random: Image2 },\r\n        { id: 3, random: Image3 },\r\n        { id: 3, random: Image4 }\r\n    ];\r\n\r\n    const [randomImage, setRandomImage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getRandomImage = () => {\r\n            const randomIndex = Math.floor(Math.random() * images.length);\r\n            return images[randomIndex].random;\r\n        };\r\n        setRandomImage(getRandomImage());\r\n    }, []);\r\n    // const config = genConfig({ sex: Math.random() > 0.5 ? 'man' : 'woman' });\r\n    const randomValue = Math.floor(Math.random() *1000);\r\n    const generateRandomString = (length) => {\r\n        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        let result = '';\r\n        for (let i = 0; i < length; i++) {\r\n          result += characters.charAt(Math.floor(Math.random() * characters.length));\r\n        }\r\n        return result;\r\n      };\r\n      const randomString = generateRandomString(3);\r\n\r\n  return (\r\n    \r\n      <div className=\"row\">\r\n        <div class=\"col\">\r\n        {/* <Avatar className='d-flex mx-auto' style={{ width: '100px', height: '100px' }} {...config} /> */}\r\n              <img src={randomImage} alt=\"Random\" />\r\n        </div>\r\n        <div className=\"col my-auto text-center\">\r\n            <p className=\"member\"> Mem***{randomString} </p>\r\n        </div>\r\n        <div className='col my-auto'>\r\n            <p className=\"received\"> Received â‚¹{randomValue}.00  Winning Amount</p>\r\n        </div>\r\n      </div>\r\n      \r\n     \r\n    \r\n   \r\n  );\r\n};\r\n\r\nexport default ProfileAvatar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}